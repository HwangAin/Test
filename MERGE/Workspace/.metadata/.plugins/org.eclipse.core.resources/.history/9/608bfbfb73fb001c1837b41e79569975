package Controller;

import java.io.IOException;
import java.sql.Connection;
import java.sql.SQLException;
import java.util.ArrayList;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import student.StudentDAO;
import student.StudentDTO;
//*.aa
//<a href="test.aa"> </a>
@WebServlet("*.st")// * <- 전체를 받는 url 패턴 ( 맵핑)사용할때는 / (슬러쉬)를 빼야됨
public class StudentController extends HttpServlet {
	RequestDispatcher rd;
	StudentDAO dao = new StudentDAO();
	@Override
	protected void service(HttpServletRequest req, HttpServletResponse resp) throws ServletException, IOException {
		rd = req.getRequestDispatcher("error/404.jsp");//나중에 추가예정(2022.06.30 HAI)
		if ( req.getServletPath().equals("/list.st") ) {
			
//			추후 DB에서 가져온 정보를 이용 => 지금은 ArrayList를 수동으로 만들기
			ArrayList<StudentDTO> list = dao.getList();
			req.setAttribute("list", list);//포장을 하고~!! req.set ( Attribute (key, value) ) 포장!!
//				JSP에 보내서 출력해보기
			rd = req.getRequestDispatcher("Student/list.jsp"); // rd <= req. get
		} else if ( req.getServletPath().equals("/test.st") ) {
//			DB연결 테스트함
//			dao.selectOne();
//			dao.getList();
			System.out.println(dao.getList().size());
		} else if( req.getServletPath().equals("/detail.st") ) {
			StudentDTO dto = dao.getStudentInfo(req.getParameter("student_no"),req.getParameter("user_id"));
			req.setAttribute("dto", dto) ;
			
			rd = req.getRequestDispatcher("Student/detail.jsp");
			
//			StudentDTO dto = dao.getStudentInfo(req);
//java.lang.NumberFormatException: null => 이유: list.st 들어갔을때
//												↓url상 name과 detail.st 로 들어올때 name 값 (student_no) 이 달라서 생긴 오류
//			http://localhost/mvc/detail.st?studentno=1&user_id=sdafg
//			StudentDTO infoDto = dao.getStudentInfo();
//			System.out.println(req.getParameter("student_no"));
//			System.out.println(req.getParameter("user_id"));
//			ArraList, ???
//			DAO 메소드 만들어 보기. getStudentInfo 메소드 만들기(리턴타입 자유롭게)
//			detail.jsp <- 상세정보를 확인할 수 있는 페이지 (헤더, 푸터) 그대로 있고 내용만 바뀌게
		
		
		} else if ( req.getServletPath().equals("/update.st") ) {
//			getAttribute("dto")를 하고 dto.getMember 사용 오류 => 
//			req.getParameter("student_no");
//			req.getParameter("ser_id");
			StudentDTO dto = dao.getMember(req.getParameter("student_no"), req.getParameter("user_id"));
			
			
			
			
			rd = req.getRequestDispatcher("Student/update.jsp");
			
		} else if ( req.getServletPath().equals("/delete.st") ) {
			
		}
		rd.forward(req, resp);//<= 위치를 확인 잘 하자!!
	}
	

}







